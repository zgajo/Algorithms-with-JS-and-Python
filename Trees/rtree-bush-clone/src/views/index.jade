extends layout

block content
  div#mapid
  script.

      console.log(!{JSON.stringify(startNode)})
      var startNode =!{JSON.stringify(startNode)};   
      var endNode =!{JSON.stringify(endNode)};   


      // Andorra
      var mymap = L.map("mapid").setView(startNode, 10);
      // Rovinj
      //- var mymap = L.map("mapid").setView([45.0808344, 13.6383927], 8);

      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution:
          '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      }).addTo(mymap);

      var ways =!{JSON.stringify(ways)};   
      var data = JSON.parse(ways);

      console.log(data)
      //- data.forEach(way => {
      //-   L.polyline(way.nodes, {color: 'blue'}).addTo(mymap);
      //- })

      // Andorra
      var startLatLng = L.latLng(startNode);
      var endLatLng = L.latLng(endNode);

      // Rovinj
      //- var startLatLng = L.latLng(45.1105710, 13.7094278);
      //- var endLatLng = L.latLng(45.0808344, 13.6383927);

      L.circleMarker(startLatLng, {radius: 10, color: "red"}).addTo(mymap)
      L.circleMarker(endLatLng, {radius: 10, color: "green"}).addTo(mymap)

      var route =!{JSON.stringify(path)};   
      var visitedNodes =!{JSON.stringify(visited)};   

      L.polyline(route, {color: 'green'}).addTo(mymap);

      visitedNodes.forEach((node, index) => {
      L.circle(node, {circle: 15,title: `index: ${index}, ${node[0]}, ${node[1]}`}).addTo(mymap)
      })
      console.log(route)

    
